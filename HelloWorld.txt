//main関数なし
print("Hell World");

//main関数有り
int main()
{
  print("Hell World");
  return 0;
}

//format指定
int main()
{
  printf("Hell World{0}","!!");
  return 0;
}

//配列を拡張して末尾に要素を挿入する関数
var ArrayAdd(var arg,var value)
{
  var r = arg.ReAlloc(arg.Length + 1);
  r[arg.Length] = value;
  return r;
}

//ポインタを取得する関数
//実態はint
//Pointer型に
var GetPtr(var arg1)
{
  return &arg1;
}

//関数を返す関数
var print = printfunc;//組み込み関数を上書き
print("Hello")(",")("World!!");
var printfunc(var arg1)
{
  printf("{0}", arg1);
  return printfunc;
}

//ポインタを取得して指定した型へキャストする
print((string*)&"ABCDEFG" + 2);//BCDEFG

//配列
var UnsafeArray(var length)
{
  return malloc(length);
}
//Branfuck
v S="+++++++++[>++++++++>+++++++++++>+++++<<<-]>.>++.+++++++..+++.>-.------------.<++++++++.--------.+++.------.--------.>+.";v[999]m;for(v i=0;i<m.Length;i++){m[i]=0;}v p=0;v f=0;for(int i=0;i<S.Length;i++){var B=S[i];if(f)if(B==']')f=0;if(B=='[')if(m[p]==0)f++;if(B==']'){if(m[p]!=0){for(v j=i;j>0;j--){if(S[j]=='['){i=j-1;j=-1;}}}}if(B=='<')p--;if(B=='>')p++;if(B=='+')m[p]++;if(B=='-')m[p]--;if(B=='.')printf("{0}",(char)m[p]);}